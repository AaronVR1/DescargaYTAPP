export interface TextareaContext {
    isDisabled?: boolean;
    isInvalid?: boolean;
    isReadOnly?: boolean;
    isHovered?: boolean;
    isRequired?: boolean;
    isFocused?: boolean;
    isFocusVisible?: boolean;
    inputRef?: any;
    handleFocus?: any;
}
export interface ITextareaProps {
    isInvalid?: boolean;
    isDisabled?: boolean;
    isHovered?: boolean;
    isFocused?: boolean;
    isRequired?: boolean;
    isReadOnly?: boolean;
}
export interface IInputProps {
    type?: 'text' | 'password';
}
export type ITextareaComponentType<Root, Input> = React.ForwardRefExoticComponent<React.PropsWithoutRef<Root> & React.RefAttributes<Root> & ITextareaProps> & {
    Input: React.ForwardRefExoticComponent<React.PropsWithoutRef<Input> & React.RefAttributes<Input> & IInputProps>;
};
//# sourceMappingURL=types.d.ts.map